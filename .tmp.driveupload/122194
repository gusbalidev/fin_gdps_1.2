"use strict";(()=>{var e={};e.id=817,e.ids=[817],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},4782:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>x,patchFetch:()=>h,requestAsyncStorage:()=>l,routeModule:()=>d,serverHooks:()=>g,staticGenerationAsyncStorage:()=>m});var s={};r.r(s),r.d(s,{DELETE:()=>p,GET:()=>u});var n=r(3278),a=r(5002),o=r(4877),i=r(2458),c=r(1309);async function u(){try{let e=await i.Z.transactionAll.findMany({select:{accountId:!0,description:!0,date:!0,debit:!0,credit:!0,account:{select:{code:!0}}},orderBy:{date:"desc"}});return console.log("query TRANSACTION ALL",e),c.NextResponse.json(e,{status:200})}catch(e){return c.NextResponse.json({error:e},{status:500})}}async function p(e){let{ids:t}=await e.json();return console.log("Deleting transactions with ids:",t),await new Promise(e=>setTimeout(e,1e3)),c.NextResponse.json({success:!0})}let d=new n.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/transaction/route",pathname:"/api/transaction",filename:"route",bundlePath:"app/api/transaction/route"},resolvedPagePath:"/Users/gustistudio/Dev/gdps/gdps-c3/src/app/api/transaction/route.js",nextConfigOutput:"",userland:s}),{requestAsyncStorage:l,staticGenerationAsyncStorage:m,serverHooks:g}=d,x="/api/transaction/route";function h(){return(0,o.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:m})}},2458:(e,t,r)=>{r.d(t,{Z:()=>s});let s=new(r(3524)).PrismaClient}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[379,833],()=>r(4782));module.exports=s})();