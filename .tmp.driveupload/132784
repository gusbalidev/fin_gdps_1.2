"use strict";(()=>{var e={};e.id=504,e.ids=[504],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6014:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>v,patchFetch:()=>x,requestAsyncStorage:()=>d,routeModule:()=>c,serverHooks:()=>g,staticGenerationAsyncStorage:()=>l});var a={};r.r(a),r.d(a,{GET:()=>p});var s=r(3278),n=r(5002),o=r(4877),i=r(2458),u=r(1309);async function p(e){try{let{searchParams:t}=new URL(e.url),r=t.get("accountGroup2Id"),a=t.get("startDate"),s=t.get("endDate");if(!r)return u.NextResponse.json({error:"accountGroup2Id is required"},{status:400});if(!a||!s)return u.NextResponse.json({error:"startDate and endDate are required"},{status:400});let n=await i.Z.account.groupBy({by:["accountGroup2Id"],where:{accountGroup2Id:parseInt(r),transactionAlls:{some:{date:{gte:new Date(a),lte:new Date(s)}}}}});return u.NextResponse.json({accountGroups:n,totalBalance:0},{status:200})}catch(e){return u.NextResponse.json({error:e},{status:500})}}let c=new s.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/activity/route",pathname:"/api/activity",filename:"route",bundlePath:"app/api/activity/route"},resolvedPagePath:"/Users/gustistudio/Dev/gdps/gdps-c3/src/app/api/activity/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:d,staticGenerationAsyncStorage:l,serverHooks:g}=c,v="/api/activity/route";function x(){return(0,o.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:l})}},2458:(e,t,r)=>{r.d(t,{Z:()=>a});let a=new(r(3524)).PrismaClient}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[379,833],()=>r(6014));module.exports=a})();