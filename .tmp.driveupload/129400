"use strict";(()=>{var e={};e.id=33,e.ids=[33],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},1120:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>x,patchFetch:()=>q,requestAsyncStorage:()=>l,routeModule:()=>p,serverHooks:()=>m,staticGenerationAsyncStorage:()=>g});var a={};r.r(a),r.d(a,{DELETE:()=>d,GET:()=>c});var n=r(3278),s=r(5002),o=r(4877),i=r(2458),u=r(1309);async function c(e){try{let{searchParams:t}=new URL(e.url),r=t.get("startDate"),a=t.get("endDate");if(!r||!a)return u.NextResponse.json({error:"startDate and endDate are required"},{status:400});let n=await i.Z.transactionAll.findMany({select:{accountId:!0,description:!0,ref:!0,date:!0,debit:!0,credit:!0,account:{select:{code:!0}}},where:{date:{gte:new Date(r),lte:new Date(a)}},orderBy:{date:"desc"}});return console.log("query TRANSACTION PERIODE",n),u.NextResponse.json(n,{status:200})}catch(e){return u.NextResponse.json({error:e},{status:500})}}async function d(e){let{ids:t}=await e.json();return console.log("Deleting transactions with ids:",t),await new Promise(e=>setTimeout(e,1e3)),u.NextResponse.json({success:!0})}let p=new n.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/transaction-q/route",pathname:"/api/transaction-q",filename:"route",bundlePath:"app/api/transaction-q/route"},resolvedPagePath:"/Users/gustistudio/Dev/gdps/gdps-c3/src/app/api/transaction-q/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:l,staticGenerationAsyncStorage:g,serverHooks:m}=p,x="/api/transaction-q/route";function q(){return(0,o.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:g})}},2458:(e,t,r)=>{r.d(t,{Z:()=>a});let a=new(r(3524)).PrismaClient}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[379,833],()=>r(1120));module.exports=a})();