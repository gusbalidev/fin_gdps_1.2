"use strict";(()=>{var e={};e.id=660,e.ids=[660],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8816:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>x,patchFetch:()=>h,requestAsyncStorage:()=>d,routeModule:()=>l,serverHooks:()=>g,staticGenerationAsyncStorage:()=>m});var a={};r.r(a),r.d(a,{DELETE:()=>p,GET:()=>u});var s=r(3278),n=r(5002),o=r(4877),i=r(2458),c=r(1309);async function u(){try{let e=await i.Z.transactionAll.findMany({select:{accountId:!0,description:!0,ref:!0,date:!0,debit:!0,credit:!0,account:{select:{code:!0}}},orderBy:{date:"desc"}});return console.log("query TRANSACTION ALL",e),c.NextResponse.json(e,{status:200})}catch(e){return c.NextResponse.json({error:e},{status:500})}}async function p(e){let{ids:t}=await e.json();return console.log("Deleting transactions with ids:",t),await new Promise(e=>setTimeout(e,1e3)),c.NextResponse.json({success:!0})}let l=new s.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/transaction-all/route",pathname:"/api/transaction-all",filename:"route",bundlePath:"app/api/transaction-all/route"},resolvedPagePath:"/Users/gustistudio/Dev/gdps/gdps-c3/src/app/api/transaction-all/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:d,staticGenerationAsyncStorage:m,serverHooks:g}=l,x="/api/transaction-all/route";function h(){return(0,o.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:m})}},2458:(e,t,r)=>{r.d(t,{Z:()=>a});let a=new(r(3524)).PrismaClient}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[379,833],()=>r(8816));module.exports=a})();